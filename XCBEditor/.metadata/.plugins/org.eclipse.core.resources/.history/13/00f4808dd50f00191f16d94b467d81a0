package XCBVisualEditor.XCBUtil;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.JOptionPane;

import com.google.gson.JsonObject;

public class XCBLoadFromNet {

public static String DownLoadPages(String urlsrc, String outpath) throws UnknownHostException  
{  
	// 输入流   
	InputStream in = null;  
	// 文件输出流  
	FileOutputStream out = null;  
	try{   
		HttpParams httpParams = new BasicHttpParams();  
		HttpConnectionParams.setConnectionTimeout(httpParams,5000); //设置连接超时为5秒  
		HttpClient client = new DefaultHttpClient(httpParams); // 生成一个http客户端发送请求对象  
		HttpGet httpget1 = new HttpGet(urlsrc); //对查询页面get  
		HttpResponse httpResponse1 = client.execute(httpget1); // 发送请求并等待响应  
		// 判断网络连接是否成功  
		System.out.println("状态码："+httpResponse1.getStatusLine().getStatusCode());  
		if (httpResponse1.getStatusLine().getStatusCode() != 200)  
			System.out.println("网络错误异常！!!!");  
		else  
			System.out.println("网络连接成功!!!");  
		httpget1.abort(); //关闭get  
		HttpGet httpget2 = new HttpGet("http://....../download? DownloadFileName=All=true"); //对下载链接get实现下载  
		HttpResponse httpResponse2 = client.execute(httpget2);  
		HttpEntity entity = httpResponse2.getEntity(); // 获取响应里面的内容  
		in = entity.getContent(); // 得到服务气端发回的响应的内容（都在一个流里面）  
		out = new FileOutputStream(new File(outpath));   
		byte[] b = new byte[1024];   
		int len = 0;   
		while((len=in.read(b))!= -1){   
			out.write(b,0,len);   
		}   
		in.close();   
		out.close();    
		}catch(Exception e){    
			e.printStackTrace();  
		}  
	}  
	System.out.println("download, success!!");   
} 
/*--------------------- 
作者：Ritajiaojiao 
来源：CSDN 
原文：https://blog.csdn.net/ritajiaojiao/article/details/78308522 
版权声明：本文为博主原创文章，转载请附上博文链接！*/
}
